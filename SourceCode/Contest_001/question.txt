给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值target的那两个整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。
你可以按任意顺序返回答案。

示例 1：
输入：nums = [2,7,11,15], target = 9
输出：[0,1]
解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。

示例 2：
输入：nums = [3,2,4], target = 6
输出：[1,2]

示例 3：
输入：nums = [3,3], target = 6
输出：[0,1]
 
提示：
2 <= nums.length <= 104
-109 <= nums[i] <= 109
-109 <= target <= 109
只会存在一个有效答案

进阶：你可以想出一个时间复杂度小于 O(n^2) 的算法吗？
-----------------------------------------------------------------------
思路：
1.暴力枚举
    显然要在数组Array中找到两个和为target的结果，从第一个数x开始，看后面是否存在y使得x+y=target，这样需要时间复杂度O(n^2)
2.Hash表法
    利用Hash表<key:value>=<num[i], i>的特点且可以在O(1)时间中判定是否存在target-x，从而在O(N)时间内求解
